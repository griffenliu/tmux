################################# 全局设置 #################################
#还不知道具体作用
set -g set-titles on
set -g set-titles-string '#Jon'

bind r source-file ~/.tmux.conf \; display-message "Config reloaded.." # 绑定重新加载配置文件的快捷键: prefix+r
setw -g automatic-rename on     #
set -g prefix C-k               # 将激活控制台的快捷键由Ctrl+b修改为Ctrl+k
unbind C-b                      # 解绑默认的prefix
bind C-k send-prefix            # 连续按两次C-k可以将C-k发送给tmux打开的程序
set -sg escape-time 1           # 设定前缀键和命令键之间的延时
set -g base-index 1             # 把窗口的初始索引值从 0 改为 1
setw -g pane-base-index 1       # 把面板的初始索引值从 0 改为 1
set -g default-terminal "screen-256color"       # 设置默认的终端模式为 256 色模式
set-option -g history-limit 100000              # scrollback buffer n lines
# 开启活动通知
setw -g monitor-activity on
set -g visual-activity on
set -g renumber-windows on      # 当关闭窗口后，重设窗口序号，例如：原来为window 0,1,2,当移除window[1]后，变为window 0,1（2的序号变为1）
set -g display-time 3000        # 提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set -g repeat-time 1000         # 控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒

################################# 会话设置 #################################


################################# 窗口设置 #################################
setw -g utf8 on                 # 开启窗口的UTF-8支持
# 分割面板
bind | split-window -h
bind _ split-window -v
# 临时最大化面板或恢复面板大小
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

################################# 面板设置 #################################
# 窗口间切换
# [prefix-hjkl] pane之间移动
unbind h
bind -r h select-pane -L
unbind j
bind -r j select-pane -D
unbind k
bind -r k select-pane -U
unbind l
bind -r l select-pane -R
# 调整面板大小
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set -g pane-active-border-fg '#55ff55'
set -g pane-border-fg '#555555'
# smart pane switching with awareness of vim splits
# [Ctrl-hjkl] pane之间移动 貌似会造成prefix失效...
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
################################# 状态设置 #################################
set -g status-utf8 on             # 开启utf8编码
set -g status-interval 60         # 每 60 秒更新一次状态栏
set -g status-justify centre      # 设置窗口列表居中显示

# 设置状态栏的颜色和格式
set -g status-bg black
set -g status-fg white
set -g status-left-length 40
set -g status-right-length 20
set -g status-left "#[fg=green]Session:[#[fg=cyan]#S:#[fg=yellow]#I.#[fg=red]#P#[fg=green]]"
set -g status-right '#[fg=green][#[fg=yellow]%m-%d %H:%M#[fg=green]]'

#设置状态栏窗口列表颜色和格式
setw -g window-status-fg default
setw -g window-status-bg cyan
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
setw -g window-status-format '#[dim]#I:#[dim]#W#[fg=grey,dim]'
setw -g window-status-current-format '[#[fg=white,bold]#I#[fg=white,bold]:#[fg=white,bold]#W#[fg=dim]]'
